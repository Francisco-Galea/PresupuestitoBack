// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PresupuestitoBack.DataAccess;

#nullable disable

namespace PresupuestitoBack.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PresupuestitoBack.Models.Budget", b =>
                {
                    b.Property<int>("IdBudget")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBudget"));

                    b.Property<int?>("ClientHistoryIdClientHistory")
                        .HasColumnType("INT");

                    b.Property<decimal>("Cost")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("DescriptionBudget")
                        .IsRequired()
                        .HasColumnType("VARCHAR(400)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdBudget");

                    b.HasIndex("ClientHistoryIdClientHistory");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryModel")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<int>("IdPerson")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdClient");

                    b.HasIndex("IdPerson");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.ClientHistory", b =>
                {
                    b.Property<int>("IdClientHistory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClientHistory"));

                    b.Property<int?>("ClientIdClient")
                        .HasColumnType("INT");

                    b.Property<int>("IdClient")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdClientHistory");

                    b.HasIndex("ClientIdClient");

                    b.HasIndex("IdClient");

                    b.ToTable("ClientsHistorys");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Cost", b =>
                {
                    b.Property<int>("IdCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCost"));

                    b.Property<decimal>("CostValue")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TypeSerialized")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdCost");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("IdEmployee");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmployee"));

                    b.Property<int>("IdPerson")
                        .HasColumnType("INT");

                    b.Property<decimal>("Salary")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdEmployee");

                    b.HasIndex("IdPerson");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.FixedCost", b =>
                {
                    b.Property<int>("IdFixedCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFixedCost"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<DateOnly>("DateCharged")
                        .HasColumnType("DATE");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("INT");

                    b.HasKey("IdFixedCost");

                    b.ToTable("FixedCost");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Invoice", b =>
                {
                    b.Property<int>("IdInvoice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInvoice"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<int>("IdSupplierHistory")
                        .HasColumnType("INT");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("BIT");

                    b.Property<int?>("List<IdInvoices>")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdInvoice");

                    b.HasIndex("IdSupplierHistory");

                    b.HasIndex("List<IdInvoices>");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.InvoiceItem", b =>
                {
                    b.Property<int>("IdInvoiceItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInvoiceItem"));

                    b.Property<int>("IdMaterial")
                        .HasColumnType("INT");

                    b.Property<int?>("InvoiceIdInvoice")
                        .HasColumnType("INT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdInvoiceItem");

                    b.HasIndex("IdMaterial");

                    b.HasIndex("InvoiceIdInvoice");

                    b.ToTable("InvoicesItems");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Item", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"));

                    b.Property<int>("IdMaterial")
                        .HasColumnType("INT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("WorkIdWork")
                        .HasColumnType("INT");

                    b.HasKey("IdItem");

                    b.HasIndex("IdMaterial");

                    b.HasIndex("WorkIdWork");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("MaterialBrand")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("MaterialColor")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("MaterialDescription")
                        .IsRequired()
                        .HasColumnType("VARCHAR(400)");

                    b.Property<string>("MaterialMeasure")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("MaterialUnitMeasure")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("INT");

                    b.HasKey("MaterialId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<string>("DescriptionPayment")
                        .IsRequired()
                        .HasColumnType("VARCHAR(400)");

                    b.Property<int>("IdBudget")
                        .HasColumnType("INT");

                    b.Property<int>("IdInvoice")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PaymentId");

                    b.HasIndex("IdBudget");

                    b.HasIndex("IdInvoice");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerson"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("VARCHAR(250)");

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("VARCHAR(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("VARCHAR(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdPerson");

                    b.ToTable("People");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Salary", b =>
                {
                    b.Property<int>("IdSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalary"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<DateOnly>("BillDate")
                        .HasColumnType("DATEONLY");

                    b.Property<int>("IdPayment")
                        .HasColumnType("INT");

                    b.Property<int>("IdPayments")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdSalary");

                    b.HasIndex("IdPayment");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.SubCategory", b =>
                {
                    b.Property<int>("SubCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)");

                    b.HasKey("SubCategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Supplier", b =>
                {
                    b.Property<int>("IdSupplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("IdSupplier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSupplier"));

                    b.Property<int>("IdPerson")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdSupplier");

                    b.HasIndex("IdPerson");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.SupplierHistory", b =>
                {
                    b.Property<int>("SupplierHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierHistoryId"));

                    b.Property<int>("IdSupplier")
                        .HasColumnType("INT");

                    b.Property<string>("Invoices")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("SupplierHistoryId");

                    b.HasIndex("IdSupplier");

                    b.ToTable("SupplierHistories");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Work", b =>
                {
                    b.Property<int>("IdWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWork"));

                    b.Property<int?>("BudgetIdBudget")
                        .HasColumnType("INT");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("DATE");

                    b.Property<int>("EstimatedHoursWorked")
                        .HasColumnType("INT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("VARCHAR(500)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("StatusSerialized")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("IdWork");

                    b.HasIndex("BudgetIdBudget");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Budget", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.ClientHistory", null)
                        .WithMany("Budgets")
                        .HasForeignKey("ClientHistoryIdClientHistory");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Client", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Person", "OPerson")
                        .WithMany("Clients")
                        .HasForeignKey("IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPerson");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.ClientHistory", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Client", null)
                        .WithMany("ClientsHistory")
                        .HasForeignKey("ClientIdClient");

                    b.HasOne("PresupuestitoBack.Models.Person", "OClient")
                        .WithMany()
                        .HasForeignKey("IdClient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OClient");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Employee", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Person", "OPerson")
                        .WithMany("Employees")
                        .HasForeignKey("IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPerson");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Invoice", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.SupplierHistory", "OSupplierHistory")
                        .WithMany()
                        .HasForeignKey("IdSupplierHistory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresupuestitoBack.Models.SupplierHistory", null)
                        .WithMany("OInvoices")
                        .HasForeignKey("List<IdInvoices>");

                    b.Navigation("OSupplierHistory");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.InvoiceItem", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Material", "OMaterial")
                        .WithMany()
                        .HasForeignKey("IdMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresupuestitoBack.Models.Invoice", null)
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceIdInvoice");

                    b.Navigation("OMaterial");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Item", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Material", "OMaterial")
                        .WithMany()
                        .HasForeignKey("IdMaterial")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresupuestitoBack.Models.Work", null)
                        .WithMany("Materials")
                        .HasForeignKey("WorkIdWork");

                    b.Navigation("OMaterial");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Material", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.SubCategory", "OSubCategory")
                        .WithMany()
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OSubCategory");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Payment", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Budget", "OBudget")
                        .WithMany("Payments")
                        .HasForeignKey("IdBudget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresupuestitoBack.Models.Invoice", "OInvoice")
                        .WithMany("Payments")
                        .HasForeignKey("IdInvoice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OBudget");

                    b.Navigation("OInvoice");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Salary", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Payment", "OPayment")
                        .WithMany()
                        .HasForeignKey("IdPayment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPayment");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.SubCategory", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Category", "OCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OCategory");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Supplier", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Person", "OPerson")
                        .WithMany("Suppliers")
                        .HasForeignKey("IdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPerson");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.SupplierHistory", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Supplier", "OSupplier")
                        .WithMany()
                        .HasForeignKey("IdSupplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OSupplier");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Work", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Budget", null)
                        .WithMany("Works")
                        .HasForeignKey("BudgetIdBudget");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Budget", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Client", b =>
                {
                    b.Navigation("ClientsHistory");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.ClientHistory", b =>
                {
                    b.Navigation("Budgets");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Person", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Employees");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.SupplierHistory", b =>
                {
                    b.Navigation("OInvoices");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Work", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
