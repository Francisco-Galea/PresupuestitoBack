// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PresupuestitoBack.DataAccess;

#nullable disable

namespace PresupuestitoBack.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240927003730_haber")]
    partial class haber
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PresupuestitoBack.Models.Budget", b =>
                {
                    b.Property<int>("IdBudget")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBudget"));

                    b.Property<int>("ClientHistoryId")
                        .HasColumnType("INT");

                    b.Property<decimal>("Cost")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("DescriptionBudget")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(400)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdBudget");

                    b.HasIndex("ClientHistoryId");

                    b.ToTable("Budgets");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryModel")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Client", b =>
                {
                    b.Property<int>("IdClient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClient"));

                    b.Property<int>("IdPerson")
                        .HasColumnType("int");

                    b.Property<int>("OPersonIdPerson")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdClient");

                    b.HasIndex("OPersonIdPerson");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.ClientHistory", b =>
                {
                    b.Property<int>("IdClientHistory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdClientHistory"));

                    b.Property<int>("ClientId")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdClientHistory");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientsHistorys");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Cost", b =>
                {
                    b.Property<int>("IdCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCost"));

                    b.Property<decimal>("CostValue")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdCost");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("IdEmployee");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmployee"));

                    b.Property<int>("IdPerson")
                        .HasColumnType("int");

                    b.Property<int>("OPersonIdPerson")
                        .HasColumnType("INT");

                    b.Property<decimal>("Salary")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdEmployee");

                    b.HasIndex("OPersonIdPerson");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.EmployeeHistory", b =>
                {
                    b.Property<int>("IdEmployeeHistory")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEmployeeHistory"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATETIME");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdEmployeeHistory");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeHistories");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.FixedCost", b =>
                {
                    b.Property<int>("IdFixedCost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFixedCost"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<DateOnly>("DateCharged")
                        .HasColumnType("DATE");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("INT");

                    b.HasKey("IdFixedCost");

                    b.ToTable("FixedCost");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Invoice", b =>
                {
                    b.Property<int>("IdInvoice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInvoice"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("BIT");

                    b.Property<int>("OSupplierHistorySupplierHistoryId")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("SuplierHistoryId")
                        .HasColumnType("int");

                    b.HasKey("IdInvoice");

                    b.HasIndex("OSupplierHistorySupplierHistoryId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.InvoiceItem", b =>
                {
                    b.Property<int>("IdInvoiceItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInvoiceItem"));

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INT");

                    b.Property<int>("OMaterialMaterialId")
                        .HasColumnType("INT");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdInvoiceItem");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("OMaterialMaterialId");

                    b.ToTable("InvoicesItems");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Item", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItem"));

                    b.Property<int>("IdMaterial")
                        .HasColumnType("int");

                    b.Property<int>("IdWork")
                        .HasColumnType("int");

                    b.Property<int>("OMaterialMaterialId")
                        .HasColumnType("INT");

                    b.Property<int>("OWorkIdWork")
                        .HasColumnType("INT");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdItem");

                    b.HasIndex("OMaterialMaterialId");

                    b.HasIndex("OWorkIdWork");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"));

                    b.Property<string>("MaterialBrand")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("MaterialColor")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("MaterialDescription")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(400)");

                    b.Property<string>("MaterialMeasure")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("MaterialUnitMeasure")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<int>("OSubcategorySubCategoryMaterialId")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("MaterialId");

                    b.HasIndex("OSubcategorySubCategoryMaterialId");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("DATE");

                    b.Property<string>("DescriptionPayment")
                        .IsRequired()
                        .HasColumnType("VARCHAR(400)");

                    b.Property<int>("IdBudget")
                        .HasColumnType("int");

                    b.Property<int>("IdInvoice")
                        .HasColumnType("int");

                    b.Property<int?>("OBudgetIdBudget")
                        .HasColumnType("INT");

                    b.Property<int?>("OInvoiceIdInvoice")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PaymentId");

                    b.HasIndex("OBudgetIdBudget");

                    b.HasIndex("OInvoiceIdInvoice");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.PaymentBudget", b =>
                {
                    b.Property<int>("PaymentBudgetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentBudgetId"));

                    b.Property<int>("BudgetId")
                        .HasColumnType("INT");

                    b.Property<int>("PaymentId")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PaymentBudgetId");

                    b.HasIndex("BudgetId");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentsBudget");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.PaymentInvoice", b =>
                {
                    b.Property<int>("PaymentInvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentInvoiceId"));

                    b.Property<int>("InvoiceId")
                        .HasColumnType("INT");

                    b.Property<int>("PaymentId")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PaymentInvoiceId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("PaymentId");

                    b.ToTable("PaymentsInvoice");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.PaymentSalary", b =>
                {
                    b.Property<int>("PaymentSalaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentSalaryId"));

                    b.Property<int>("PaymentId")
                        .HasColumnType("INT");

                    b.Property<int>("SalaryId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("PaymentSalaryId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("SalaryId");

                    b.ToTable("PaymentsSalary");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Person", b =>
                {
                    b.Property<int>("IdPerson")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPerson"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(250)");

                    b.Property<string>("CUIT")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(150)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdPerson");

                    b.ToTable("People");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Salary", b =>
                {
                    b.Property<int>("IdSalary")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSalary"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IdPayments")
                        .HasColumnType("int");

                    b.Property<int>("OPaymentPaymentId")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdSalary");

                    b.HasIndex("OPaymentPaymentId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.SubCategoryMaterial", b =>
                {
                    b.Property<int>("SubCategoryMaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategoryMaterialId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("SubCategoryName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(100)");

                    b.HasKey("SubCategoryMaterialId");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Supplier", b =>
                {
                    b.Property<int>("IdSupplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasColumnName("IdSupplier");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSupplier"));

                    b.Property<int>("IdPerson")
                        .HasColumnType("int");

                    b.Property<int>("OPersonIdPerson")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdSupplier");

                    b.HasIndex("OPersonIdPerson");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.SupplierHistory", b =>
                {
                    b.Property<int>("SupplierHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierHistoryId"));

                    b.Property<int>("OsupplierIdSupplier")
                        .HasColumnType("INT");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("SuplierId")
                        .HasColumnType("int");

                    b.HasKey("SupplierHistoryId");

                    b.HasIndex("OsupplierIdSupplier");

                    b.ToTable("SupplierHistories");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Work", b =>
                {
                    b.Property<int>("IdWork")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdWork"));

                    b.Property<int>("BudgetId")
                        .HasColumnType("INT");

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("DECIMAL(18, 2)");

                    b.Property<DateTime>("DeadLine")
                        .HasColumnType("DATE");

                    b.Property<int>("EstimatedHoursWorked")
                        .HasColumnType("INT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("NVARCHAR(500)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("IdWork");

                    b.HasIndex("BudgetId");

                    b.ToTable("Works");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Budget", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.ClientHistory", "OclientHistory")
                        .WithMany("Budgets")
                        .HasForeignKey("ClientHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OclientHistory");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Client", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Person", "OPerson")
                        .WithMany()
                        .HasForeignKey("OPersonIdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPerson");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.ClientHistory", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Client", "Oclient")
                        .WithMany("ClientsHistory")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Oclient");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Employee", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Person", "OPerson")
                        .WithMany()
                        .HasForeignKey("OPersonIdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPerson");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.EmployeeHistory", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Employee", "OEmployee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OEmployee");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Invoice", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.SupplierHistory", "OSupplierHistory")
                        .WithMany()
                        .HasForeignKey("OSupplierHistorySupplierHistoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OSupplierHistory");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.InvoiceItem", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Invoice", "OInvoice")
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresupuestitoBack.Models.Material", "OMaterial")
                        .WithMany()
                        .HasForeignKey("OMaterialMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OInvoice");

                    b.Navigation("OMaterial");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Item", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Material", "OMaterial")
                        .WithMany()
                        .HasForeignKey("OMaterialMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresupuestitoBack.Models.Work", "OWork")
                        .WithMany("Materials")
                        .HasForeignKey("OWorkIdWork")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OMaterial");

                    b.Navigation("OWork");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Material", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.SubCategoryMaterial", "OSubcategory")
                        .WithMany()
                        .HasForeignKey("OSubcategorySubCategoryMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OSubcategory");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Payment", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Budget", "OBudget")
                        .WithMany("Payments")
                        .HasForeignKey("OBudgetIdBudget");

                    b.HasOne("PresupuestitoBack.Models.Invoice", "OInvoice")
                        .WithMany("Payments")
                        .HasForeignKey("OInvoiceIdInvoice");

                    b.Navigation("OBudget");

                    b.Navigation("OInvoice");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.PaymentBudget", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Budget", "OBudget")
                        .WithMany()
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresupuestitoBack.Models.Payment", "OPayment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OBudget");

                    b.Navigation("OPayment");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.PaymentInvoice", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Invoice", "OInvoice")
                        .WithMany()
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresupuestitoBack.Models.Payment", "OPayment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OInvoice");

                    b.Navigation("OPayment");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.PaymentSalary", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Payment", "OPayment")
                        .WithMany()
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PresupuestitoBack.Models.Salary", "OSalary")
                        .WithMany()
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPayment");

                    b.Navigation("OSalary");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Salary", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Payment", "OPayment")
                        .WithMany()
                        .HasForeignKey("OPaymentPaymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPayment");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.SubCategoryMaterial", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Category", "OCategory")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OCategory");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Supplier", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Person", "OPerson")
                        .WithMany()
                        .HasForeignKey("OPersonIdPerson")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OPerson");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.SupplierHistory", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Supplier", "Osupplier")
                        .WithMany()
                        .HasForeignKey("OsupplierIdSupplier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Osupplier");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Work", b =>
                {
                    b.HasOne("PresupuestitoBack.Models.Budget", "Budget")
                        .WithMany("Works")
                        .HasForeignKey("BudgetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Budget");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Budget", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Client", b =>
                {
                    b.Navigation("ClientsHistory");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.ClientHistory", b =>
                {
                    b.Navigation("Budgets");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Invoice", b =>
                {
                    b.Navigation("InvoiceItems");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("PresupuestitoBack.Models.Work", b =>
                {
                    b.Navigation("Materials");
                });
#pragma warning restore 612, 618
        }
    }
}
